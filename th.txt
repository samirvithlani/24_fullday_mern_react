React js single page application:
.html -- index.html

----------------------------------

AMAZONE
navbar
products
cart
user login
...
functions --> functions -->diff --> Components

custome compo:
1)functional     : 16.x
2)class component:

1)function keyword
2)arrow function


component naming convention:
component name starts with cap
User
UserDetail

export ---> immport/

if by mitstake you create file name with small dont rename it..

if export const --> {import}
if export default --> without {}

style in react :- inline ,external css


forEach : void
map     : new array


MapDemo4 :

get book data
id name releseyear ratings author price

relaese year is 2025 --> current year
relaese year is 2024 --> previous year
relaese year is 2026 --> next year

price range -- [1000-1500] -> red --> high price
price range -- [500-100] -> red --> yellow price

rating >4 highly recomnded..
rating <2 message


relation between components

app -->Header
parent --> child

data transfer bw components:

props: property
parent -->child --->

APP.js--> User.jsx -->UserList
Parent -->Child --> child
          parent --> child

          Users -->[] ->UserList -->map

function calling... --Users

context
redux


27/08/2025
implmetion flow:
App --> title --> Header print
create COmponent -- Users,UserList

App -->Users -- apptitle = {title}

Users --> UserList
create an array inside Users --> send to -- UserList as props
UserList -- map

create function test inside Users -->
button onclick event -- call 2 ways

send that function to child(UserList) -->call that function from child..



DOM: document object model
document.createElement("h1") --> DOM object update..
Virtual dom: it is copy of original dom
Reserch task : dom
browser : vdom -->og dom compare-->
----------------------------------------------
hook: life cycle / builtin function hook
functional based:
all hook name starts with use

1)useState : it is globle state of your variable which will refect of vdom as well og dom:


state variable -->chanbges --> component re redner




test(no param)


onclick = {test}
onclick = {()=>{}}
--------------------------------------------
implmentation : 01/09/2025

Create Component named Students --> create useState array --3
Create Componanr named StudentList --> make parent child realtion
pass student array in props
iterate using map -->table...


creta function for info in parent componet  pass id in param
call that function from child --> implemnt find functionlty inside

creta function for delete in parent componet  pass id in param
call that function from child --> implemnt filter

------->do same for employee and doctor
--------------------------------------------------------------
Component:
Navbar: LINK
<a href =aboutus.html">aboutus
SINGLE PAGE application: page should not reload
Component Call:
AboutUs --> a=bout us
-->URL -->address

React Routing:
react-router-dom

<BroweserRouter></> :-> it enable routing in your react applicaton
Child......
<Routes>

    <Route></>
    <Route>
    <Route>
    <Route>
    <Route>
    <Route>
    <Route>

</>

Navbar
  -->home
  -->shows
  -->movies

TSAK:
create depedent dropdown
country
state 

if user select india next dropdown has only indian state

hint:declate proper json array with state and country: filter or find function
onChage event:
dont use gpt i know all response..

react hook form : hookBased useForm
Formik: COmponent based

handleSubmit(submithandler)



handleSubmit(cb){

  cb({process dtaa...})

}

{
  required:
  {
    value:true,message:"name is required*"
  }
}


{
            required:
            {
                value:true,
                message:"email is required"
            }
}

-----------------------------------
reusbale table:

MyTable:
columns: array -- loop
rows : array loop


A -- UserList --> coln -- id,username,userage
B --->ADMIN   --> id,adminname,adminage..
c --> spending list

<table>
<thead>
  {
    props.columns.map((col)=>{
      return<th>{col}</th>
    })
  }
</>
</table>


:find bomb:
when user come first time or page refresh 1 bomb will generate between 1 to 25 -->userandomno
when user select any numner for record store in array push using ... ooperator
if random no genrated 20 and user press on 20 means bomb found and game over...

useRef: dom -->element access -->ref -->without rerender

API CALLING:
React js --frontend fw: database connec... -dynamic data -->

Backend fw ->dynamic data provide:
java  --> code --react run [no]
php   -->code -->react run
python --> code ->react run
node --> code -->react run

layer [service]

backend -->[service]  frontend
java  -->[API] -->react
python -->[API] -->react

application Programming interface

backend dev frontend dev
api produce   --> [service][api]api consume

java only understands object...
data type:
xml -->files 
JSON object -->

API -->url -->json object

goglle -->weather -->[api]third party -->

zomato : map -->google map 
google map api --> call -->response..
-------------------------------------------

https://node5.onrender.com/user/user :API 

API CALL Packages:
Fetch function --> javascript -->
axios --> 3rd party function -->

npm i axios

api call -->time response==> traffic load,seerver slow,,
Promise: response error
fullfil, reject
function -return Promise

reslove -->Then
reject --> catch

then catch -->async await

TASK:
DATA -->Table formate..
2)ApiTask1 ->https://dummyjson.com/products
           --> prodycts[] ->id,title,category,price,rating [table]
3)ApiTask2 -->https://dummyjson.com/todos all data in table fmt           